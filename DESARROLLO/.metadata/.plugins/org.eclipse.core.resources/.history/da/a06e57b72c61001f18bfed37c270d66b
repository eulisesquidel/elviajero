package com.fonseca.model.juicios;

import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.hibernate.LockMode;
import org.springframework.context.ApplicationContext;
import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

/**
 * Data access object (DAO) for domain model class JuReclamos.
 * 
 * @see com.fonseca.model.juicios.JuReclamos
 * @author MyEclipse Persistence Tools
 */

public class JuReclamosDAO extends HibernateDaoSupport {
	private static final Log log = LogFactory.getLog(JuReclamosDAO.class);

	protected void initDao() {
		// do nothing
	}

	public void save(JuReclamos transientInstance) {
		log.debug("saving JuReclamos instance");
		try {
			getHibernateTemplate().save(transientInstance);
			log.debug("save successful");
		} catch (RuntimeException re) {
			log.error("save failed", re);
			throw re;
		}
	}

	public void delete(JuReclamos persistentInstance) {
		log.debug("deleting JuReclamos instance");
		try {
			getHibernateTemplate().delete(persistentInstance);
			log.debug("delete successful");
		} catch (RuntimeException re) {
			log.error("delete failed", re);
			throw re;
		}
	}

	public JuReclamos findById(java.lang.String id) {
		log.debug("getting JuReclamos instance with id: " + id);
		try {
			JuReclamos instance = (JuReclamos) getHibernateTemplate().get(JuReclamos.class.getName(), id);
			return instance;
		} catch (RuntimeException re) {
			log.error("get failed", re);
			throw re;
		}
	}

	public List findByExample(JuReclamos instance) {
		log.debug("finding JuReclamos instance by example");
		try {
			List results = getHibernateTemplate().findByExample(instance);
			log.debug("find by example successful, result size: "
					+ results.size());
			return results;
		} catch (RuntimeException re) {
			log.error("find by example failed", re);
			throw re;
		}
	}

	public List findByProperty(String propertyName, Object value) {
		log.debug("finding JuReclamos instance with property: " + propertyName
				+ ", value: " + value);
		try {
			String queryString = "from JuReclamos as model where model."
					+ propertyName + "= ?";
			return getHibernateTemplate().find(queryString, value);
		} catch (RuntimeException re) {
			log.error("find by property name failed", re);
			throw re;
		}
	}

	public List findAll() {
		log.debug("finding all JuReclamos instances");
		try {
			String queryString = "from JuReclamos";
			return getHibernateTemplate().find(queryString);
		} catch (RuntimeException re) {
			log.error("find all failed", re);
			throw re;
		}
	}

	public JuReclamos merge(JuReclamos detachedInstance) {
		log.debug("merging JuReclamos instance");
		try {
			JuReclamos result = (JuReclamos) getHibernateTemplate().merge(
					detachedInstance);
			log.debug("merge successful");
			return result;
		} catch (RuntimeException re) {
			log.error("merge failed", re);
			throw re;
		}
	}

	public void attachDirty(JuReclamos instance) {
		log.debug("attaching dirty JuReclamos instance");
		try {
			getHibernateTemplate().saveOrUpdate(instance);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public void attachClean(JuReclamos instance) {
		log.debug("attaching clean JuReclamos instance");
		try {
			getHibernateTemplate().lock(instance, LockMode.NONE);
			log.debug("attach successful");
		} catch (RuntimeException re) {
			log.error("attach failed", re);
			throw re;
		}
	}

	public static JuReclamosDAO getFromApplicationContext(ApplicationContext ctx) {
		return (JuReclamosDAO) ctx.getBean("JuReclamosDAO");
	}
}